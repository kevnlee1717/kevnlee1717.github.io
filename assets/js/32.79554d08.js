(window.webpackJsonp=window.webpackJsonp||[]).push([[32],{226:function(s,t,a){"use strict";a.r(t);var n=a(28),e=Object(n.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"js高级"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#js高级"}},[s._v("#")]),s._v(" js高级")]),s._v(" "),a("h2",{attrs:{id:"数据类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数据类型"}},[s._v("#")]),s._v(" 数据类型")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("值类型")]),s._v(" "),a("ul",[a("li",[s._v("number")]),s._v(" "),a("li",[s._v("string")]),s._v(" "),a("li",[s._v("boolean")]),s._v(" "),a("li",[s._v("undefined 是一个数值，typeof undefined = 'undefined' 没有其他类型的typeof = ‘undefined’所以可以用typeof来判断一个类似是否是为定义")]),s._v(" "),a("li",[s._v("null 是一个数值，注意 typeof null = 'object',因为不等于'null'而是等于'object'所以没有办法跟其他也是typeof为'object'的类型区分,只能用 === 来判断")])])]),s._v(" "),a("li",[a("p",[s._v("引用类型")]),s._v(" "),a("ul",[a("li",[s._v("object 对象只能用来存放数据，而且无序")]),s._v(" "),a("li",[s._v("array 也是对象的一种，数组存放数据，但是有序，可以用下标索引。typeof array = 'object'")]),s._v(" "),a("li",[s._v("function 也是对象的一种，可以执行 typeof fuction = 'function'")])])])]),s._v(" "),a("h2",{attrs:{id:"typeof-instanceof"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#typeof-instanceof"}},[s._v("#")]),s._v(" typeof instanceof ===/==")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("===判断的时候不对类型进行转换， ==会对类型进行转换")])]),s._v(" "),a("li",[a("p",[s._v("typeof 返回的是一个类型的字符串描述")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" a "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//a的类型为 undefined 字符串描述是 'undefined'")]),s._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("typeof")]),s._v(" a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 'undefined'")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("typeof")]),s._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("===")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'undefined'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//true 这里是跟字符串‘undefined’做比较")]),s._v("\n    a "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("===")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("undefined")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// true  这里是跟undefined类型做比较")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//不可以用instanceof因为instanceof是给对象进行类型判断")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br")])])]),s._v(" "),a("li",[a("p",[s._v("instanceof是对引用类型进行判断")]),s._v(" "),a("ul",[a("li",[s._v("array 既是 array 也是 object")]),s._v(" "),a("li",[s._v("function 既是 function 也是 object")])])])]),s._v(" "),a("h2",{attrs:{id:"判断需要注意的问题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#判断需要注意的问题"}},[s._v("#")]),s._v(" 判断需要注意的问题")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("typeof")]),s._v(" "),a("ul",[a("li",[s._v("可以判断  function('function')，undefined('undefined')，string ,number ,boolean")]),s._v(" "),a("li",[s._v("不可以判断 null('object'), array('object'), object('object')\n"),a("ul",[a("li",[s._v("不可以判断所有typeof是object的类型，按道理所有的object，array，function都不可以，但是function特殊，返回的是'funciton',所以可以.其他的object和array都不可以因为返回的都是'object'")]),s._v(" "),a("li",[s._v("null本来是数值，但是typeof又是‘object’，所以也不可以。")]),s._v(" "),a("li",[s._v("所以只要是返回 'object'的都不可以，因为没有唯一性。")])])])])]),s._v(" "),a("li",[a("p",[s._v("instanceof")]),s._v(" "),a("ul",[a("li",[s._v("判断object类型的数据\n"),a("ul",[a("li",[s._v("object")]),s._v(" "),a("li",[s._v("array")]),s._v(" "),a("li",[s._v("function")])])])])]),s._v(" "),a("li",[a("p",[s._v("===")]),s._v(" "),a("ul",[a("li",[s._v("用来判断 undefined，null")])])])]),s._v(" "),a("h2",{attrs:{id:"null和undefined"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#null和undefined"}},[s._v("#")]),s._v(" null和undefined")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("undefined 是定义了未赋值， null是定义了并赋值为null")])]),s._v(" "),a("li",[a("p",[s._v("null本来是值类型，但是typeof是object，是因为我们定义一个变量并且准备赋值为对象的时候要给个初始值这样比较严谨，这时候只能赋值给null，这样我们就指定这个变量接下来要赋值给一个对象，所以null的typeof才会变成object。")])]),s._v(" "),a("li",[a("p",[s._v("null在变量定义和变量回收的时候都使用，当变量所指向的对象不使用了，把变量赋值为null，浏览器就会进行回收这个对象，因为这个对象的引用没有了。")])])]),s._v(" "),a("h2",{attrs:{id:"变量的类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#变量的类型"}},[s._v("#")]),s._v(" 变量的类型")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//a存的是function的地址，所以变量a是一个引用变量")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[s._v("a")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//这时候应该是去访问a的值(是一个地址)根据这个值去找到这个地址")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//根据这个地址的信息标明是array，function，object来判断类型")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("typeof")]),s._v(" a\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// b是一个值变量，因为b存的值即是变量的值")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" b "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("\n\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br")])]),a("h2",{attrs:{id:"内存和函数参数传值"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#内存和函数参数传值"}},[s._v("#")]),s._v(" 内存和函数参数传值")]),s._v(" "),a("ul",[a("li",[s._v("变量的内存")])]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//这里有三个内存 a, b ,还有一个对象，对象存在堆中，地址存在b")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//a, b 都是内存地址的别名")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" b "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" \n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("ul",[a("li",[s._v("函数的调用是传值的")])]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//a的值是 对象 {'name' : 'john', 'age': 18} 在堆中的地址")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'name'")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'john'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'age'")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("18")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//a是形参，在被调用的时候 fn内部有个局部变量a，fn的局部变量a在被调用的时候")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//被赋值为传进来的参数的值， 这里的a是局部变量，当函数结束的时候，就会被回收")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//如果在fn的局部变量在函数内，不指向其他地址，所有的操作会影响传进来的对象")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//现在在里面声明了一个新的对象，并且fn的a指向了那个新的对象，")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//在函数结束的时候那个新的对象就会被回收")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("fn")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("a")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("name "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'john1'")]),s._v("\n    a "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'name'")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'john2'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'age'")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("19")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//这里a以传值的方式，把自己的值传给了 fn的局部变量a")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("fn")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br")])]),a("h2",{attrs:{id:"类的属性访问用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#类的属性访问用"}},[s._v("#")]),s._v(" 类的属性访问用[]")]),s._v(" "),a("ul",[a("li",[s._v("当属性的名字有 - 的时候，访问就要用  a['pros-a']")]),s._v(" "),a("li",[s._v("当属性的名字不确定的时候")])]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" prosname "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'name'")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" Person "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//这里prosname不带''号，是直接以变量的方式")]),s._v("\nPerson"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("prosname"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'john'")]),s._v("\n\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("h2",{attrs:{id:"函数可以指定调用者"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#函数可以指定调用者"}},[s._v("#")]),s._v(" 函数可以指定调用者")]),s._v(" "),a("p",[s._v("函数并不属于哪个对象在内存中")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//定义了一个空对象")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" obj "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//定义了一个全局函数")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("fn")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("xxx "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'john'")]),s._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("xxx"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//用obj来调用fn函数，可见所有的函数在内存里都是独立的，并不属于一个类，")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//函数里的this指针根据是谁在调用它，this代表的就是调用者。")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("fn")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("call")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("obj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br")])]),a("h2",{attrs:{id:"函数的iife立即执行函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#函数的iife立即执行函数"}},[s._v("#")]),s._v(" 函数的iife立即执行函数")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//全局变量a")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'123'")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//立即执行函数，里面的变量和函数都是局部的")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//可以通过window来暴露出想要暴露的函数和变量")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("test")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    window"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[s._v("$")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            test"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" test\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//$ 是一个函数，$()执行后是一个对象，里面有一个test属性")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//test属性的值是立即执行函数里的函数test，这样就把立即执行函数里的test函数暴露出来")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//并且把立即执行函数里变量a通过这个test函数来显示出来")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("$")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("test")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br")])]),a("h2",{attrs:{id:"prototype和-proto"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#prototype和-proto"}},[s._v("#")]),s._v(" prototype和__proto__")]),s._v(" "),a("p",[a("a",{attrs:{href:"https://drive.google.com/open?id=1cvPH0PUkAsHd45ZwbGo-lTfq6mwmKHd1",target:"_blank",rel:"noopener noreferrer"}},[s._v("原型链主要作用是靠隐性链去查找"),a("OutboundLink")],1)]),s._v(" "),a("p",[a("img",{attrs:{src:"http://drive.google.com/uc?export=view&id=1cvPH0PUkAsHd45ZwbGo-lTfq6mwmKHd1",alt:"alt text",title:"Soot"}})]),s._v(" "),a("p",[a("a",{attrs:{href:"https://drive.google.com/open?id=1KGo6W-y5xRS0fOI7Tfd-UvpMJkuoj7QY",target:"_blank",rel:"noopener noreferrer"}},[s._v("显示链prototype只存在构造函数里"),a("OutboundLink")],1)]),s._v(" "),a("p",[a("img",{attrs:{src:"http://drive.google.com/uc?export=view&id=1KGo6W-y5xRS0fOI7Tfd-UvpMJkuoj7QY",alt:"alt text",title:"Soot"}})]),s._v(" "),a("p",[a("a",{attrs:{href:"https://drive.google.com/open?id=1CWQxG2YJB6XieaQc9at0OeFMKxzJWQ9D",target:"_blank",rel:"noopener noreferrer"}},[s._v("隐性链__proto__ 在实例和原型类里的作用，都是做为索引使用"),a("OutboundLink")],1)]),s._v(" "),a("p",[a("img",{attrs:{src:"http://drive.google.com/uc?export=view&id=1CWQxG2YJB6XieaQc9at0OeFMKxzJWQ9D",alt:"alt text",title:"Soot"}})]),s._v(" "),a("p",[a("a",{attrs:{href:"https://drive.google.com/open?id=1E_vfxueJFtC8r7N0P7tMXPxrSR6N96p-",target:"_blank",rel:"noopener noreferrer"}},[s._v("隐性链__proto__在构造函数里的作用，是找到自己做为函数的属性"),a("OutboundLink")],1)]),s._v(" "),a("p",[a("img",{attrs:{src:"http://drive.google.com/uc?export=view&id=1E_vfxueJFtC8r7N0P7tMXPxrSR6N96p-",alt:"alt text",title:"Soot"}})]),s._v(" "),a("h2",{attrs:{id:"变量和函数提升"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#变量和函数提升"}},[s._v("#")]),s._v(" 变量和函数提升")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("变量和函数提升的原因，执行的时候分为两个步骤，一个是上下文的初始化，二才是开始执行")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("windows上下文初始化,一定要注意顺序")]),s._v(" "),a("ol",[a("li",[a("p",[s._v("在windows上下文执行的时候先把所有的var变量先添到window的属性里，包括隐性的var声明，比如直接使用的 console.log(varible) 这里varible没有定义过，直接使用的都算。 这时候这个var的值为 ‘undefined’")])]),s._v(" "),a("li",[a("p",[s._v("把所有的函数声明实例化一个对象，并添加到windows属性里，比如声明了func 那么windows就有一个属性  func: func()")])])])]),s._v(" "),a("li",[a("p",[s._v("然后开始执行")]),s._v(" "),a("ol",[a("li",[a("p",[s._v("然后开始执行代码, 如果变量这时候还没有赋值，那么就输出为 'undefined' 这就是变量提升")])]),s._v(" "),a("li",[a("p",[s._v("开始执行代码的时候所有的函数都已经可以调用，因为在windows里已经给这个函数添加了属性并且已经实例化了函数对象。")])])])])])]),s._v(" "),a("li",[a("p",[s._v("函数定义如果以变量方式赋值，那么就会被当作变量，那么在定义语句前调用的话就是 ‘undefined’")])])]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("func")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//这时候调用会小时 func不是一个函数，因为func是var定义的，默认添加到windows属性的时候是‘undefined’")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[s._v("func")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("fun1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'fun1'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("ul",[a("li",[s._v("注意上下文初始化和执行两个步骤并且严格安装顺序\n"),a("ol",[a("li",[a("p",[s._v("上下文初始化: c:'undefind' (在Windows中)")])]),s._v(" "),a("li",[a("p",[s._v("上下文初始化  c: c() (在Windows中)")])]),s._v(" "),a("li",[a("p",[s._v("开始执行 c = 1 //这里直接把c变为了 c:1 (在Windows中)")])]),s._v(" "),a("li",[a("p",[s._v("跳过函数的声明,声明在执行阶段是不执行的，只有在上下文初始化阶段实例化函数对象的时候已经执行过。所以也断点不下来在执行的时候。")])]),s._v(" "),a("li",[a("p",[s._v("这时候把c用函数调用的方式调用就会出粗，因为c已经是一个number")])])])])]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" c "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("c")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("c")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'c'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("h2",{attrs:{id:"闭包"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#闭包"}},[s._v("#")]),s._v(" 闭包")]),s._v(" "),a("ul",[a("li",[s._v("闭包的介绍")])]),s._v(" "),a("p",[a("a",{attrs:{href:"https://drive.google.com/open?id=115IvaRZ0ewz1xvrP9l01msIqudB_EZaS",target:"_blank",rel:"noopener noreferrer"}},[s._v("闭包是怎么形成的"),a("OutboundLink")],1)]),s._v(" "),a("p",[a("img",{attrs:{src:"http://drive.google.com/uc?export=view&id=115IvaRZ0ewz1xvrP9l01msIqudB_EZaS",alt:"alt text",title:"Soot"}})]),s._v(" "),a("p",[a("a",{attrs:{href:"https://drive.google.com/open?id=1PxTMFFPUR5pjQe5ZxJsvE-2jJ8-TAzsS",target:"_blank",rel:"noopener noreferrer"}},[s._v("闭包的总结和闭包的使用"),a("OutboundLink")],1)]),s._v(" "),a("p",[a("img",{attrs:{src:"http://drive.google.com/uc?export=view&id=1PxTMFFPUR5pjQe5ZxJsvE-2jJ8-TAzsS",alt:"alt text",title:"Soot"}})]),s._v(" "),a("ul",[a("li",[s._v("在使用好闭包后，记得把引用设置为null， 释放调闭包里的局部变量")])]),s._v(" "),a("h2",{attrs:{id:"闭包的this用法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#闭包的this用法"}},[s._v("#")]),s._v(" 闭包的this用法")]),s._v(" "),a("p",[a("a",{attrs:{href:"https://drive.google.com/open?id=1eiyXApqXsmTQ8sOeksJBKcp8ldYuj72G",target:"_blank",rel:"noopener noreferrer"}},[s._v("闭包的this用法"),a("OutboundLink")],1)]),s._v(" "),a("p",[a("img",{attrs:{src:"http://drive.google.com/uc?export=view&id=1eiyXApqXsmTQ8sOeksJBKcp8ldYuj72G",alt:"alt text",title:"Soot"}})])])}),[],!1,null,null,null);t.default=e.exports}}]);